{"version":3,"sources":["components/contexts/SearchInputContext.js","components/contexts/ImagePinsContext.js","components/SearchBar.js","components/Nav.style.js","components/Notifications.style.js","components/Notifications.js","components/Inbox.style.js","components/Inbox.js","components/DropDownSettings.style.js","components/DropDownSettings.js","components/Nav.js","App.style.js","components/HomeBoard.style.js","components/ImgPin.style.js","components/ImgPinBoardList.style.js","components/contexts/BoardsInfoContext.js","components/ImgPinBoardList.js","components/ImgPin.js","components/contexts/CachedImgsContext.js","components/HomeBoard.js","components/PageUnavailable.js","components/UserProfile.style.js","components/CreateBoard.style.js","components/CreateBoard.js","components/SavedBoard.style.js","components/Board.style.js","components/Board.js","components/SavedBoards.js","components/UserProfile.js","components/MobileNotif.js","components/MobileInbox.js","components/BoardDetails.style.js","components/BoardDetails.js","components/ImgPinDetails.style.js","components/ImgPinDetails.js","App.js","reportWebVitals.js","index.js"],"names":["SearchInputContext","createContext","SearchInputProvider","children","useState","input","setInput","Provider","value","ImagePinsContext","ImagePinsProvider","images","setImages","require","config","SearchBar","className","placeholder","useContext","submit","setSubmit","shuffle","arr","i","length","j","Math","floor","random","term","a","axios","get","process","response","data","results","onSubmit","e","preventDefault","getImages","type","onChange","target","to","pathname","search","fromSearch","Nav","styled","nav","HomeLink","Link","HomeBtn","button","props","backgroundColor","SearchBarWrapper","div","StyledSearchBar","IconsWrapper","ProfileButton","Settings","MobileNavWrapper","StyledNotif","display","Notifications","notifToggle","StyledInbox","InboxSearchBarWrapper","StyledInboxSearchBar","Inbox","inboxToggle","IconButton","style","fill","fontSize","StyledDropDownSettings","DropDownSettings","dropDownToggle","href","rel","cursor","Header","setNotifToggle","setInboxToggle","setDropDownToggle","homeToggle","setHomeToggle","profileToggle","setProfileToggle","homeBg","setHomeBg","enableHomeBg","getDefaultHomeImgs","onClick","height","width","viewBox","aria-hidden","aria-label","role","d","textDecoration","color","GlobalStyle","createGlobalStyle","Main","main","ImgWrapper","StyledPin","StyledBoardList","BoardsInfoContext","BoardsInfoProvider","boardsInfo","setBoardsInfo","ImgPinBoardList","boardProps","imgInfo","boardImgs","some","imgObj","id","alreadySaved","setAlreadySaved","useEffect","boardId","event","filteredBoard","filter","board","map","img","duplicateImgCheck","every","src","urls","regular","alt","boardName","substring","isPrivate","ImgPin","randomizeImgs","showModal","setShowModal","alt_description","CachedImgsContext","CachedImgsProvider","cachedImages","setCachedImages","HomeBoard","forBoard","filteredboardImgs","location","getDefaultImgs","forEach","cachedImg","includes","concat","breakpointCols","default","1440","1024","768","420","columnClassName","pin","image","defaultProps","StyledPageUnavailable","PageUnavailable","StyledProfile","CreateWrapper","CreateDiv","CreateBoardModalWrapper","CreateBoardOverlay","CreateBoardModal","StyledDeleteWrapper","CreateBoard","closeModal","modalClose","shouldEdit","closeEditModal","editId","editName","editIsPrivate","setBoardName","privateBoard","setPrivateBoard","nameEdit","setNameEdit","editPrivate","setEditPrivate","createBtnStyles","editBtnStyles","addBoard","createdDate","Date","getTime","uuidv4","maxLength","checked","onDoubleClick","StyledBoardsWrapper","StyledBoardLink","StyledBoard","CoverImage","Board","edit","setEdit","substr","milli","min","hrs","days","displayBoardAge","SavedBoards","UserProfile","addBtnToggle","setAddBtnToggle","boardCreate","setBoardCreate","setModalClose","fontWeight","MobileNotif","MobileInbox","StyledBoardDetailsWrapper","StyledBoardHeader","StyledSecret","StyledH1","h1","BoardDetails","match","params","name","StyledImgPinDetailsWrapper","StyledImg","StyledOtherImgs","ImgPinDetails","filteredPin","useLocation","window","scrollTo","links","html","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73e4cc93.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const SearchInputContext = createContext();\r\n\r\nexport function SearchInputProvider({children}){\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    return (\r\n        <SearchInputContext.Provider value={[input, setInput]}>\r\n            {children}\r\n        </SearchInputContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const ImagePinsContext = createContext();\r\n\r\nexport function ImagePinsProvider({children}){\r\n    const [images, setImages] = useState([]);\r\n\r\n    return (\r\n        <ImagePinsContext.Provider value={[images, setImages]}>\r\n            {children}\r\n        </ImagePinsContext.Provider>\r\n    )\r\n}","import React, { useContext, useState } from 'react';\r\nimport { StyledSearchBar } from './Nav.style';\r\nimport { SearchInputContext } from './contexts/SearchInputContext';\r\nimport { ImagePinsContext } from './contexts/ImagePinsContext';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nrequire('dotenv').config();\r\n\r\nfunction SearchBar({ className, placeholder}) {\r\n\r\n    const [input, setInput] = useContext(SearchInputContext);\r\n    const [images, setImages] = useContext(ImagePinsContext);\r\n    const [ submit, setSubmit ] = useState(false);\r\n\r\n    //ES6 ver. of Durstenfeld shuffle (optimized version of Fisher-Yates)\r\n    function shuffle(arr){\r\n        for (let i = arr.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [arr[i], arr[j]] = [arr[j], arr[i]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    async function getImages(term){\r\n        const response = await axios.get(`https://api.unsplash.com/search/photos?client_id=${process.env.REACT_APP_API_KEY}&query=${term}&per_page=30`);\r\n        // return array of 30 searched images\r\n        setImages(shuffle(response.data.results));\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        getImages(input);\r\n        setInput(\"\");\r\n        setSubmit(true);\r\n    }\r\n\r\n    function handleChange(e){\r\n        if(submit){\r\n            setSubmit(false);\r\n        }\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={className} onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder={placeholder} value={input} onChange={handleChange}/>\r\n            </form>\r\n            {\r\n                submit &&\r\n                <Redirect to={{\r\n                pathname: \"/pinterest-clone/\",\r\n                search: input,\r\n                fromSearch: true\r\n                }}\r\n            />\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBar from './SearchBar';\r\n\r\n//! make nav mobile responsive \r\n// ! link to image-specific page\r\n\r\n// nav\r\nexport const Nav = styled.nav`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: white;\r\n    z-index: 10000000;\r\n\r\n\r\n    .MuiSvgIcon-root{\r\n        font-size: 28px;\r\n    }\r\n\r\n    .text-bubble{\r\n        color: #767676;\r\n    }\r\n`\r\n\r\n// link to home\r\nexport const HomeLink = styled(Link)`\r\n    color: black;\r\n    text-decoration: none;\r\n\r\n    /* pinterest icon class name*/\r\n    .MuiSvgIcon-root{\r\n        color: #e60023;\r\n    }\r\n`\r\n\r\n// home btn\r\nexport const HomeBtn = styled.button`\r\n    background-color: ${props => props.backgroundColor ? \"black\" : \"transparent\"};\r\n    padding: 14px 16px;\r\n    color: ${props => props.backgroundColor ? \"white\" : \"black\"};;\r\n    font-weight: 700;\r\n    border-radius: 50px;\r\n\r\n    &:hover{\r\n        background-color: ${props => props.backgroundColor ? \"black\" : \"#e8e8e8\"};\r\n    }\r\n\r\n    @media only screen and (max-width: 425px) {\r\n        display: none;\r\n    }\r\n`\r\n\r\n// search bar\r\nexport const SearchBarWrapper = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    border-radius: 100px;\r\n    background-color: #efefef;\r\n    min-height: 100%;\r\n    margin-left: 10px;\r\n\r\n    &:hover{\r\n        background-color: #d6d6d6;\r\n    }\r\n`\r\n\r\nexport const StyledSearchBar = styled(SearchBar)`\r\n    display: flex;\r\n    width: 100%;\r\n    padding-right: 15px;\r\n\r\n    input{\r\n        width: 100%;\r\n        border: none;\r\n        background-color: transparent;\r\n    }\r\n`\r\n\r\n//icons wrapper\r\nexport const IconsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: \"space-between\";\r\n\r\n    .mobile-home-btn{\r\n        display: none;\r\n    }\r\n\r\n    @media only screen and (max-width: 425px) {\r\n        display: none;\r\n    }\r\n`\r\n\r\n// profile button\r\nexport const ProfileButton = styled.button`\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 50%;\r\n    padding: 5px;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    background-color: #efefef;\r\n`\r\n\r\n// settings\r\nexport const Settings = styled.div`\r\n    position: relative;\r\n`\r\n\r\n// mobile nav\r\nexport const MobileNavWrapper = styled.div`\r\n    display: none;\r\n\r\n    @media only screen and (max-width: 425px) {\r\n        display: block;\r\n        position: fixed;\r\n        bottom: 3%;\r\n        left: 0; \r\n        right: 0; \r\n        margin: auto;\r\n        width: fit-content;\r\n        background-color: white;\r\n        border-radius: 50px;\r\n        z-index: 10000000;\r\n    }\r\n\r\n`","import styled from 'styled-components';\r\n\r\nexport const StyledNotif = styled.div`\r\n    display: ${ props => props.display ? \"block\" : \"none\"};\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n    width: 360px;\r\n    border-radius: 10px;\r\n    z-index: 1000;\r\n    height: calc(100vh - 73px);\r\n    box-shadow: -2px 2px 10px #b7b7b7;\r\n    background-color: white;\r\n    overflow-y: auto;\r\n    animation: up-to-down 0.2s ease-in;\r\n\r\n    @keyframes up-to-down{\r\n        0%{\r\n            transform: translateY(-2%);\r\n        }\r\n\r\n        100%{\r\n            transform: translateY(0);\r\n        }\r\n    }\r\n\r\n    .notif-title{\r\n        text-align: center;\r\n        margin: 20px 0;\r\n    }\r\n\r\n    .friend{\r\n        width: 95%;\r\n        margin: auto;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 10px;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .friend:hover{\r\n        background-color: #e4e4e4;\r\n    }\r\n\r\n    .profile-pic{\r\n        width: 50px;\r\n        height: 50px;\r\n        background-color: #e8e8e8;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border-radius: 50px;\r\n        font-size: 1.3rem;\r\n        font-weight: 500;\r\n    }\r\n\r\n    .friend p{\r\n        width: 80%;\r\n    }\r\n\r\n    .friend span{\r\n        font-weight: 500;\r\n    }\r\n\r\n    .year{\r\n        font-weight: 400 !important;\r\n        color: grey;\r\n    }\r\n\r\n    .link{\r\n        text-decoration: none;\r\n        color: black;\r\n    }\r\n\r\n    @media only screen and (max-width: 425px) {\r\n        display: ${ props => props.display ? \"block\" : \"none\"};\r\n        position: static;\r\n        width: 100%;\r\n        border-radius: 10px;\r\n        z-index: 0;\r\n        height: auto;\r\n        box-shadow: none;\r\n        background-color: white;\r\n        overflow-y: auto;\r\n        animation: none;\r\n        margin-top: 70px;\r\n    }\r\n`","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { StyledNotif } from './Notifications.style';\r\n\r\nfunction Notifications({notifToggle}) {\r\n    return (\r\n        <StyledNotif display={notifToggle}>\r\n            <h3 className=\"notif-title\">Updates</h3>\r\n            <Link to=\"/pinterest-clone/page-unavailable\" className=\"link\">\r\n                <div className=\"friend\">\r\n                    <div className=\"profile-pic\">A</div>\r\n                    <p><span>Aaahh</span> and <span>notabot</span> tried a Pin you've saved <span className=\"year\">1y</span></p>\r\n                </div>\r\n            </Link>\r\n        </StyledNotif>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import styled from 'styled-components';\r\nimport { SearchBarWrapper, StyledSearchBar } from './Nav.style';\r\n\r\nexport const StyledInbox = styled.div`\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n    display: ${props => props.display ? \"block\" : \"none\"};\r\n    animation: right-to-left 0.2s ease-in-out;\r\n    z-index: 1000;\r\n    width: 370px;\r\n    height: calc(100vh - 75px);\r\n    box-shadow: -2px 2px 10px #b7b7b7;\r\n    background-color: white;\r\n\r\n    @keyframes right-to-left{\r\n        0%{\r\n            transform: translateX(100%);\r\n        }\r\n\r\n        100%{\r\n            transform: translateX(0);\r\n        }\r\n    }\r\n\r\n    /* inbox header wrapper */\r\n    .inbox-header-wrapper{\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 20px 0;\r\n    }\r\n\r\n    .inbox-header-wrapper h3{\r\n        position: relative;\r\n        width: 100%;\r\n        text-align: center;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    .inbox-icons{\r\n        position: absolute;\r\n        right: 0;\r\n        top: -90%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    /* inbox main */\r\n    .inbox-main{\r\n        width: 95%;\r\n        margin: auto;\r\n    }\r\n\r\n    .inbox-main h1{\r\n        font-size: 2.2rem;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    .inbox-main p{\r\n        font-size: 14px;\r\n        margin: 10px 0;\r\n    }\r\n\r\n    .inbox-main h4{\r\n        text-align: center;\r\n        margin: 50% 0;\r\n        color: grey;\r\n    }\r\n\r\n    @media only screen and (max-width: 425px) {\r\n        position: static;\r\n        display: ${props => props.display ? \"block\" : \"none\"};\r\n        animation: none;\r\n        z-index: 0;\r\n        width: 100%;\r\n        height: auto;\r\n        box-shadow: none;\r\n        margin-top: 75px;\r\n    }\r\n`\r\n\r\n// inbox search bar\r\nexport const InboxSearchBarWrapper = styled(SearchBarWrapper)`\r\n    border: 2px solid #ddd;\r\n    background-color: white;\r\n    margin-left: 0;\r\n    width: 95%;\r\n    margin: auto;\r\n\r\n    &:hover{\r\n        background-color: transparent;\r\n        border: 2px solid #ccc;\r\n    }\r\n`\r\n\r\nexport const StyledInboxSearchBar = styled(StyledSearchBar)`\r\n    input{\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\n","import React from 'react';\r\nimport { StyledInbox, InboxSearchBarWrapper, StyledInboxSearchBar } from './Inbox.style';\r\nimport IconButton from '@material-ui/core/IconButton'; // gives bubble effect when clicked\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction Inbox({inboxToggle}) {\r\n    return (\r\n        <StyledInbox display={inboxToggle}>\r\n            <div className=\"inbox-header-wrapper\">\r\n                <h3>\r\n                    Inbox\r\n                    <div className=\"inbox-icons\">\r\n                        <IconButton>\r\n                            <MoreHorizIcon style={{fill: \"black\"}}/>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <CreateIcon style={{fontSize: \"24px\", fill: \"black\"}}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </h3>\r\n            </div>\r\n            \r\n            <div className=\"inbox-main\">\r\n                <h1>Share ideas with your friends</h1>\r\n                <InboxSearchBarWrapper>\r\n                    <IconButton>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <StyledInboxSearchBar placeholder=\"Search by name or email\"/>\r\n                </InboxSearchBarWrapper>\r\n\r\n                <p>Suggested</p>\r\n                <h4>In maintenance...</h4>\r\n            </div>\r\n        </StyledInbox>\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDropDownSettings = styled.div`\r\n    position: absolute;\r\n    display: ${props => props.display ? \"block\" : \"none\"};\r\n    top: 100%;\r\n    right: 0;\r\n    min-width: 250px;\r\n    max-width: 350px;\r\n    width: 100%;\r\n    padding: 10px;\r\n    z-index: 1000;\r\n    border-radius: 10px;\r\n    text-align: left;\r\n    background-color: white;\r\n    box-shadow: -2px -2px 10px #c3c3c3;\r\n\r\n    p{\r\n        font-size: 12px;\r\n        margin: 10px 0;\r\n    }\r\n\r\n    h3{\r\n        margin: 10px 0;\r\n        cursor: not-allowed;\r\n        padding: 5px 10px;\r\n        border-radius: 5px;\r\n        color: grey;\r\n    }\r\n\r\n    h3:hover, .external-links:hover{\r\n        background-color: #d8d8d8;\r\n    }\r\n\r\n    .external-links{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        border-radius: 5px;\r\n        text-decoration: none;\r\n        color: black;\r\n\r\n        h3{\r\n            margin: 3px 0;\r\n            color: black;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`\r\n","import React from 'react';\r\nimport { StyledDropDownSettings } from './DropDownSettings.style';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\n\r\nfunction DropDownSettings({dropDownToggle}) {\r\n    return (\r\n        <StyledDropDownSettings display={dropDownToggle}>\r\n            <p>Accounts</p>\r\n            <h3>Add another account</h3>\r\n            <h3>Unlock business tools</h3>\r\n            <br />\r\n            <p>More Options</p>\r\n            <h3>Tune in your home feed</h3>\r\n            <h3>Install the Windows app</h3>\r\n            <a className=\"external-links\" href=\"https://help.pinterest.com/en?source=gear_menu_web\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h3>Get help</h3>\r\n                <CallMadeIcon style={{fontSize: \"22px\", cursor: \"pointer\"}}/>\r\n            </a>\r\n            <a className=\"external-links\" href=\"https://policy.pinterest.com/en/privacy-policy\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h3>See terms and privacy</h3>\r\n                <CallMadeIcon style={{fontSize: \"22px\", cursor: \"pointer\"}}/>\r\n            </a>\r\n            <h3>Log out</h3>\r\n        </StyledDropDownSettings>\r\n    )\r\n}\r\n\r\nexport default DropDownSettings\r\n","import React, { useState, useContext } from 'react';\r\nimport PinterestIcon from '@material-ui/icons/Pinterest';\r\nimport IconButton from '@material-ui/core/IconButton'; // gives bubble effect when clicked\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { Nav, HomeLink, HomeBtn, SearchBarWrapper, StyledSearchBar, ProfileButton, Settings, IconsWrapper, MobileNavWrapper } from './Nav.style';\r\nimport { Link } from 'react-router-dom';\r\nimport Notifications from './Notifications';\r\nimport Inbox from './Inbox';\r\nimport DropDownSettings from './DropDownSettings';\r\nimport { ImagePinsContext } from './contexts/ImagePinsContext';\r\nimport axios from 'axios';\r\nrequire('dotenv').config();\r\n\r\nfunction Header() {\r\n    const [images, setImages] = useContext(ImagePinsContext);\r\n\r\n\r\n    const [ notifToggle, setNotifToggle ] = useState(false);\r\n    const [ inboxToggle, setInboxToggle ] = useState(false);\r\n    const [ dropDownToggle, setDropDownToggle ] = useState(false);\r\n    // mobile icons\r\n    const [homeToggle, setHomeToggle] = useState(true);\r\n    const [profileToggle, setProfileToggle] = useState(false);\r\n\r\n    const [ homeBg, setHomeBg] = useState(true);\r\n\r\n    function toggleNotification(){\r\n        setNotifToggle(!notifToggle);\r\n        \r\n        if(inboxToggle || dropDownToggle){\r\n            setInboxToggle(false);\r\n            setDropDownToggle(false);\r\n        }\r\n    }\r\n\r\n    function toggleInbox(){\r\n        setInboxToggle(!inboxToggle);\r\n\r\n        if(dropDownToggle || notifToggle){\r\n            setNotifToggle(false);\r\n            setDropDownToggle(false);\r\n        }\r\n    }\r\n\r\n    function toggleDropDown(){\r\n        setDropDownToggle(!dropDownToggle);\r\n\r\n        if(inboxToggle || notifToggle){\r\n            setInboxToggle(false);\r\n            setNotifToggle(false);\r\n        }\r\n    }\r\n    \r\n    // mobile nav\r\n    function toggleHome(){\r\n        setHomeToggle(true);\r\n\r\n        if(inboxToggle || notifToggle || profileToggle){\r\n            setNotifToggle(false);\r\n            setInboxToggle(false);\r\n            setProfileToggle(false);\r\n        }\r\n    }\r\n\r\n    function toggleMobileNotif(){\r\n        setNotifToggle(true);\r\n\r\n        if(inboxToggle || profileToggle || homeToggle){\r\n            setProfileToggle(false);\r\n            setInboxToggle(false);\r\n            setHomeToggle(false);\r\n        }\r\n    }\r\n\r\n    function toggleMobileInbox(){\r\n        setInboxToggle(true);\r\n\r\n        if(notifToggle || profileToggle || homeToggle){\r\n            setProfileToggle(false);\r\n            setNotifToggle(false);\r\n            setHomeToggle(false);\r\n        }\r\n    }\r\n\r\n    function toggleProfile(){\r\n        setProfileToggle(true);\r\n\r\n        if(inboxToggle || notifToggle || homeToggle){\r\n            setNotifToggle(false);\r\n            setInboxToggle(false);\r\n            setHomeToggle(false);\r\n        }\r\n    }\r\n    \r\n    function disableHomeBg(){\r\n        setHomeBg(false);\r\n    }\r\n\r\n    function enableHomeBg(){\r\n        setHomeBg(true);\r\n        // mobile\r\n        setHomeToggle(true);\r\n        setNotifToggle(false);\r\n        setInboxToggle(false);\r\n        setProfileToggle(false);\r\n\r\n        // get default imgs\r\n        getDefaultHomeImgs();\r\n    }\r\n\r\n    //ES6 ver. of Durstenfeld shuffle (optimized version of Fisher-Yates)\r\n    function shuffle(arr){\r\n        for (let i = arr.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [arr[i], arr[j]] = [arr[j], arr[i]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    //call default home images\r\n    async function getDefaultHomeImgs(){\r\n        // get default images when page opened\r\n        const response = await axios.get(`https://api.unsplash.com/photos?client_id=${process.env.REACT_APP_API_KEY}&per_page=30`);\r\n        // return array of 30 images \r\n        setImages(shuffle(response.data));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav>\r\n                {/* logo */}\r\n                <HomeLink onClick={enableHomeBg} to=\"/pinterest-clone/\">\r\n                    <IconButton>\r\n                        <PinterestIcon />\r\n                    </IconButton>\r\n                </HomeLink>\r\n\r\n                {/* home btn */}\r\n                <HomeLink onClick={enableHomeBg} to=\"/pinterest-clone/\">\r\n                    <HomeBtn backgroundColor={homeBg}>Home</HomeBtn>\r\n                </HomeLink>\r\n\r\n                {/* search input */}\r\n                <SearchBarWrapper>\r\n                    <IconButton>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n\r\n                    <StyledSearchBar placeholder=\"Search\" />\r\n                </SearchBarWrapper>\r\n\r\n                <IconsWrapper>\r\n                    {/* notification */}\r\n                    <IconButton onClick={toggleNotification}>\r\n                        <NotificationsIcon style={{fill: notifToggle && \"black\"}}/>\r\n                    </IconButton>\r\n                    <Notifications notifToggle={notifToggle} />\r\n\r\n                    {/* inbox */}\r\n                    <IconButton onClick={toggleInbox}>\r\n                        <svg fill={!inboxToggle && \"currentColor\"} className=\"text-bubble\" height=\"26\" width=\"26\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" aria-label=\"\" role=\"img\">\r\n                            <path d=\"M18 12.5a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 18 12.5m-6 0a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 12 12.5m-6 0a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 6 12.5M12 0C5.925 0 1 4.925 1 11c0 2.653.94 5.086 2.504 6.986L2 24l5.336-3.049A10.93 10.93 0 0 0 12 22c6.075 0 11-4.925 11-11S18.075 0 12 0\"></path>\r\n                        </svg>\r\n                    </IconButton>\r\n                    <Inbox inboxToggle={inboxToggle}/>\r\n                    \r\n                    {/* profile */}\r\n                    <Link onClick={disableHomeBg} style={{textDecoration: \"none\", color: \"black\"}} to=\"/pinterest-clone/profile\">\r\n                        <IconButton>\r\n                            <ProfileButton>\r\n                                u\r\n                            </ProfileButton>\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    {/* drop down settings */}\r\n                    <Settings>\r\n                        <IconButton onClick={toggleDropDown}>\r\n                            <ExpandMoreIcon style={{ fill: dropDownToggle && \"black\" }}/>\r\n                        </IconButton>\r\n                        <DropDownSettings dropDownToggle={dropDownToggle}/>\r\n                    </Settings>\r\n                </IconsWrapper>\r\n            </Nav>\r\n\r\n            {/* mobile icons */}\r\n            <MobileNavWrapper>\r\n                {/* mobile home */}\r\n                <Link onClick={toggleHome} to=\"/pinterest-clone/\">\r\n                    <IconButton >\r\n                        <HomeIcon style={{fill: homeToggle && \"black\"}}/>\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                {/* mobile notification */}\r\n                <Link onClick={toggleMobileNotif} to=\"/pinterest-clone/notifications\">\r\n                    <IconButton>\r\n                        <NotificationsIcon style={{fill: notifToggle && \"black\"}}/>\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                {/* mobile inbox */}\r\n                <Link onClick={toggleMobileInbox} to=\"/pinterest-clone/inbox\">\r\n                    <IconButton>\r\n                        <svg fill={!inboxToggle && \"currentColor\"} className=\"text-bubble\" height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" aria-label=\"\" role=\"img\">\r\n                            <path d=\"M18 12.5a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 18 12.5m-6 0a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 12 12.5m-6 0a1.5 1.5 0 1 1 .001-3.001A1.5 1.5 0 0 1 6 12.5M12 0C5.925 0 1 4.925 1 11c0 2.653.94 5.086 2.504 6.986L2 24l5.336-3.049A10.93 10.93 0 0 0 12 22c6.075 0 11-4.925 11-11S18.075 0 12 0\"></path>\r\n                        </svg>\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                {/* mobile profile */}\r\n                <Link onClick={toggleProfile} to=\"/pinterest-clone/profile\">\r\n                    <IconButton>\r\n                        <PersonIcon style={{fill: profileToggle && \"black\"}}/>\r\n                    </IconButton>\r\n                </Link>\r\n            </MobileNavWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *, *::before, *::after{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        font-family: 'Roboto', sans-serif;\r\n        font-size: 16px;\r\n    }\r\n\r\n    body{\r\n        overflow-x: hidden;\r\n    }\r\n\r\n    button{\r\n        font-family: inherit;\r\n        outline: none;\r\n        border: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n    input{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\n// main\r\nexport const Main = styled.main`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-top: 80px;\r\n`\r\n\r\n// image wrapper\r\nexport const ImgWrapper = styled.div`\r\n    width: 90%;\r\n    margin: auto;\r\n    \r\n    @media only screen and (max-width: 500px) {\r\n        width: 95%;\r\n    }\r\n\r\n    @media only screen and (max-width: 375px) {\r\n        width: 100%;\r\n    }\r\n\r\n    .my-masonry-grid {\r\n        display: -webkit-box; /* Not needed if autoprefixing */\r\n        display: -ms-flexbox; /* Not needed if autoprefixing */\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-left: 0px; /* gutter size offset */\r\n        width: auto;\r\n    }\r\n    .my-masonry-grid_column {\r\n        background-clip: padding-box;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    /* Style your items */\r\n    .my-masonry-grid_column > div { /* change div to reference your elements you put in <Masonry> */\r\n        margin-bottom: 15px;\r\n    }\r\n`\r\n\r\n","import styled from 'styled-components';\r\n\r\n// image pin\r\nexport const StyledPin = styled.div`\r\n    width: 236px;\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    img{\r\n        width: 100%;\r\n        object-fit: cover;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    .img-link{\r\n        cursor: zoom-in;\r\n    }\r\n\r\n        /* modal board list */\r\n    .add-to-board-container{\r\n        position: absolute;\r\n        top: 10px;\r\n        left: 0;\r\n        right: 0;\r\n        width: 90%;\r\n        margin: auto;\r\n        display: none;\r\n        background-color: #404040;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    :hover .add-to-board-container{\r\n        display: block;\r\n    }\r\n\r\n    .add-to-board{\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        position: relative;\r\n        cursor: pointer;\r\n        padding: 5px;\r\n        z-index: 1000;\r\n    }\r\n\r\n    .board-drop-down{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: white;\r\n    }\r\n\r\n    .modal-board-list-container{\r\n        position: absolute;\r\n        background-color: white;\r\n        width: 120%;\r\n        height: 230px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        margin-top: 7px;\r\n        border-radius: 20px;\r\n        box-shadow: 0 0 5px 1px #9a9a9a;\r\n        cursor: default;\r\n        z-index: 100000001;\r\n    }\r\n\r\n    .modal-list-size{\r\n        width: 95%;\r\n        margin: auto;\r\n\r\n        h3{\r\n            text-align: center;\r\n            padding: 10px 0;\r\n        }\r\n\r\n        p{\r\n            font-size: 14px;\r\n            margin: 5px 0;\r\n        }\r\n    }\r\n\r\n    /* individual board from list */\r\n    .board-list{\r\n        height: 150px;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    @media only screen and (max-width: 1440px) {\r\n        width: 240px;\r\n    }\r\n\r\n    @media only screen and (max-width: 1280px) {\r\n        width: 220px;\r\n    }\r\n\r\n    /* @media only screen and (max-width: 1024px) {\r\n        width: 220px;\r\n    } */\r\n\r\n    @media only screen and (max-width: 540px) {\r\n        width: 150px;\r\n\r\n        .modal-board-list-container{\r\n            width: 140%;\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        width: 130px;\r\n    }\r\n\r\n    @media only screen and (max-width: 425px) {\r\n        .board-drop-down h1{\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 414px) {\r\n        width: 180px;\r\n\r\n        .modal-board-list-container{\r\n            width: 120%;\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 375px) {\r\n        width: 180px;\r\n    }\r\n\r\n    @media only screen and (max-width: 360px) {\r\n        width: 170px;\r\n    }\r\n\r\n    @media only screen and (max-width: 320px) {\r\n        width: 150px;\r\n    }\r\n\r\n    @media only screen and (max-width: 280px) {\r\n        width: 130px;\r\n\r\n        .board-drop-down h1{\r\n            font-size: 12px;\r\n        }\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\nexport const StyledBoardList = styled.div`\r\n    .board-info-container{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin: auto;\r\n        margin: 10px 0;\r\n        padding: 5px;\r\n        border-radius: 10px;\r\n        cursor: pointer;\r\n\r\n        :hover{\r\n            background-color: #ddd;\r\n        }\r\n\r\n        button{\r\n            padding: 10px 15px;\r\n            border-radius: 50px;\r\n            background-color: rgb(230, 0, 35);\r\n            font-size: 1.1rem;\r\n            color: white;\r\n            font-weight: 600;\r\n\r\n            :hover{\r\n                background-color: #ca001f;\r\n            }\r\n        }\r\n    }\r\n\r\n    .board-info{\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .board-info-img{\r\n        width: 50px;\r\n        height: 50px;\r\n        background-color: #ebebeb;\r\n        border-radius: 10px;\r\n        margin-right: 5px;\r\n    }\r\n\r\n\r\n    @media only screen and (max-width: 425px){\r\n    \r\n        .board-info-container{\r\n            div{\r\n                font-size: 12px; \r\n            }\r\n\r\n            .board-info-img{\r\n                width: 40px;\r\n                height: 40px;\r\n            }\r\n\r\n            button{\r\n                padding: 5px 10px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 280px){\r\n        .board-info-container{\r\n            flex-direction: column;\r\n            gap: 5px;\r\n        }\r\n    }\r\n`","import React, { useState, createContext } from 'react';\r\n\r\nexport const BoardsInfoContext = createContext();\r\n\r\nexport function BoardsInfoProvider({children}){\r\n    // save all created boards\r\n    const [boardsInfo, setBoardsInfo] = useState([]);\r\n\r\n    return (\r\n        <BoardsInfoContext.Provider value={[boardsInfo, setBoardsInfo]}>\r\n            {children}\r\n        </BoardsInfoContext.Provider>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { StyledBoardList } from './ImgPinBoardList.style';\r\nimport { BoardsInfoContext } from './contexts/BoardsInfoContext';\r\n\r\n\r\nfunction ImgPinBoardList({boardProps, imgInfo}) {\r\n    const [boardsInfo, setBoardsInfo] = useContext(BoardsInfoContext);\r\n    const [alreadySaved, setAlreadySaved] = useState(boardProps.boardImgs.some(imgObj => imgObj.id === imgInfo.id));\r\n\r\n    useEffect(() =>{\r\n        setAlreadySaved(boardProps.boardImgs.some(imgObj => imgObj.id === imgInfo.id));\r\n    }, [boardProps.boardImgs.length])\r\n\r\n    const alreadySavedStyle = {\r\n        backgroundColor: \"#b8b8b8\"\r\n    }\r\n\r\n    function addPinToBoard(event){\r\n        let filteredBoard = boardsInfo.filter(board => board.boardId === boardProps.boardId)[0];\r\n        // if saved image clicked again, delete it from board\r\n        if(alreadySaved){\r\n            setAlreadySaved(false);\r\n            setBoardsInfo(\r\n                boardsInfo.map(board => {\r\n                    if(board.boardId === filteredBoard.boardId){\r\n                        return({\r\n                            ...board,\r\n                            boardImgs: board.boardImgs.filter(img => img.id !== imgInfo.id)\r\n                        });\r\n                    }\r\n                    return board;\r\n                })\r\n            )\r\n        }\r\n        else{\r\n            // check for duplicate images in boards\r\n            let duplicateImgCheck = true;\r\n            if(filteredBoard.boardImgs.length){\r\n                duplicateImgCheck = filteredBoard.boardImgs.every(img => img.id !== imgInfo.id);\r\n            }\r\n            // if img not in list, add it;\r\n            if(duplicateImgCheck){\r\n                setBoardsInfo(\r\n                    boardsInfo.map(board => {\r\n                        if(board.boardId === filteredBoard.boardId){\r\n                            return({\r\n                                ...board,\r\n                                boardImgs: [...board.boardImgs, imgInfo]\r\n                            });\r\n                        }\r\n                        return board;\r\n                    })\r\n                );\r\n            }\r\n            setAlreadySaved(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledBoardList>\r\n            <div className=\"board-info-container\" id={boardProps.boardId} onClick={addPinToBoard}>\r\n                <div className=\"board-info\">\r\n                    <img className=\"board-info-img\" src={boardProps.boardImgs.length ? boardProps.boardImgs[0].urls.regular : \"#\"} alt={boardProps.boardImgs.length && boardProps.boardImgs[0].urls.regular}/>\r\n                    <div>{boardProps.boardName > 5 ? boardProps.boardName : boardProps.boardName.substring(0,5) + \"...\"}</div>\r\n                    <div>{boardProps.isPrivate && <LockIcon />}</div>\r\n                </div>\r\n                {\r\n                    alreadySaved ? <button style={alreadySavedStyle}>Saved</button> : <button>Save</button>\r\n                }\r\n            </div>\r\n        </StyledBoardList>\r\n    )\r\n}\r\n\r\nexport default ImgPinBoardList\r\n","import React, { useContext, useState } from 'react';\r\nimport { StyledPin } from './ImgPin.style';\r\nimport ImgPinBoardList from './ImgPinBoardList';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { BoardsInfoContext } from './contexts/BoardsInfoContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ImgPin({imgInfo, randomizeImgs, shuffle, images, setImages}){\r\n    const [boardsInfo, setBoardsInfo] = useContext(BoardsInfoContext);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    // show modal\r\n    function toggleBoardList(){\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    // in imgpindetails, shuffle img when other pins clicked\r\n    function shuffleImgPins(){\r\n        if(randomizeImgs){\r\n            setImages(shuffle(images));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledPin>\r\n            <Link className=\"img-link\" to={`/pinterest-clone/pin/${imgInfo.id}`} onClick={shuffleImgPins}>\r\n                <img src={imgInfo.urls.regular} alt={imgInfo.alt_description} />\r\n            </Link>\r\n\r\n            {/* hover modal */}\r\n            <div className=\"add-to-board-container\">\r\n                <div className=\"add-to-board\" onClick={toggleBoardList}>\r\n                    <div className=\"board-drop-down\" >\r\n                        <h1>Add To Board</h1>\r\n                        <ExpandMoreIcon />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* board list modal */}\r\n                <div className=\"modal-board-list-container\" style={{display: showModal ? \"block\" : \"none\"}}>\r\n                    <div className=\"modal-list-size\">\r\n                        <h3>Save to board</h3>\r\n                        <p>All boards</p>\r\n                        <div className=\"board-list\">\r\n                            {\r\n                                boardsInfo.map(board =>\r\n                                    <ImgPinBoardList boardProps={board} imgInfo={imgInfo} key={board.boardId}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </StyledPin>\r\n    )\r\n}\r\n\r\nexport default ImgPin\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const CachedImgsContext = createContext();\r\n\r\nexport function CachedImgsProvider({children}){\r\n    const [cachedImages, setCachedImages] = useState([]);\r\n\r\n    return (\r\n        <CachedImgsContext.Provider value={[cachedImages, setCachedImages]}>\r\n            {children}\r\n        </CachedImgsContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { Main, ImgWrapper } from './HomeBoard.style';\r\nimport ImgPin from './ImgPin';\r\nimport { ImagePinsContext } from './contexts/ImagePinsContext';\r\nimport axios from 'axios';\r\nimport Masonry from 'react-masonry-css';\r\nimport { CachedImgsContext } from './contexts/CachedImgsContext';\r\nrequire('dotenv').config();\r\n\r\n\r\nfunction HomeBoard(props) {\r\n    let {forBoard, filteredboardImgs, randomizeImgs} = props;\r\n    const [images, setImages] = useContext(ImagePinsContext);\r\n    const [cachedImages, setCachedImages] = useContext(CachedImgsContext);\r\n\r\n\r\n    //ES6 ver. of Durstenfeld shuffle (optimized version of Fisher-Yates)\r\n    function shuffle(arr){\r\n        for (let i = arr.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [arr[i], arr[j]] = [arr[j], arr[i]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        async function getDefaultImgs(){\r\n            // get default images when page opened\r\n            const response = await axios.get(`https://api.unsplash.com/photos?client_id=${process.env.REACT_APP_API_KEY}&per_page=30`);\r\n            // return array of 30 images \r\n            setImages(shuffle(response.data));\r\n        }\r\n\r\n        if(!forBoard){\r\n            if(!props.location.fromSearch){\r\n                getDefaultImgs();\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\r\n    images.forEach(img => {\r\n        // if cachedImages doesn't have image, add it\r\n        let cachedIds = cachedImages.map(cachedImg => cachedImg.id);\r\n        if(!cachedIds.includes(img.id)){\r\n            setCachedImages(cachedImages.concat(img));\r\n        }\r\n    })\r\n    \r\n    const breakpointColumnsObj = {\r\n        default: 7,\r\n        1440: 5,\r\n        1024: 4,\r\n        768: 3,\r\n        420: 2,\r\n    };\r\n\r\n    return (\r\n        <Main>\r\n            <ImgWrapper>\r\n                <Masonry\r\n                    breakpointCols={breakpointColumnsObj}\r\n                    className=\"my-masonry-grid\"\r\n                    columnClassName=\"my-masonry-grid_column\"\r\n                >\r\n                    {\r\n                        forBoard ? \r\n                        filteredboardImgs.map(pin => <ImgPin forBoard={true} imgInfo={pin} key={pin.id}/>) :\r\n                        images.map(image => <ImgPin imgInfo={image} key={image.id} shuffle={shuffle} randomizeImgs={randomizeImgs} images={images} setImages={setImages}/>)\r\n                    }\r\n                </Masonry>\r\n            </ImgWrapper>\r\n        </Main>\r\n    )\r\n}\r\n\r\nHomeBoard.defaultProps = {\r\n    location: {\r\n        fromSearch: false\r\n    }\r\n}\r\n\r\nexport default HomeBoard\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction PageUnavailable() {\r\n    return (\r\n        <StyledPageUnavailable>\r\n            <h1>Sorry!</h1>\r\n            <h1>Page Unavailable.</h1>\r\n        </StyledPageUnavailable>\r\n    )\r\n}\r\n\r\nconst StyledPageUnavailable = styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    h1{\r\n        font-size: 3rem;\r\n        text-align: center;\r\n    }\r\n`\r\n\r\n\r\nexport default PageUnavailable\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledProfile = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 70px;\r\n\r\n    .user-profile{\r\n        font-size: 3rem;\r\n        font-weight: 500;\r\n        background-color: #e8e8e8;\r\n        width: 100px;\r\n        height: 100px;\r\n        border-radius: 50px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    h1{\r\n        font-size: 2rem;\r\n    }\r\n\r\n    & > *{\r\n        margin: 5px;\r\n    }\r\n`\r\n\r\nexport const CreateWrapper = styled.div`\r\n    position: relative;\r\n`\r\n\r\nexport const CreateDiv = styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 180px;\r\n    box-shadow: 0px 0px 5px #969696;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    margin-top: 5px;\r\n    z-index: 10;\r\n    background-color: white;\r\n\r\n    & > *{\r\n        margin: 5px;\r\n        padding: 5px;\r\n    }\r\n\r\n    p{\r\n        font-size: 14px;\r\n    }\r\n\r\n    h3{\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .pin:hover{\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    .board:hover{\r\n        cursor: pointer;\r\n        background-color: #e8e8e8;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\n// create board modal\r\nexport const CreateBoardModalWrapper = styled.div`\r\n\r\n`\r\n\r\nexport const CreateBoardOverlay = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: 0;\r\n    background-color: rgba(0,0,0,0.7);\r\n    z-index: 100000000;\r\n`\r\n\r\nexport const CreateBoardModal = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    z-index: 1000000000;\r\n    width: 25%;\r\n\r\n    @media only screen and (max-width: 1024px) {\r\n        width: 60%;\r\n    }\r\n\r\n    @media only screen and (max-width: 425px) {\r\n        width: 90%;\r\n    }\r\n\r\n    h1{\r\n        font-size: 1.6rem;\r\n        letter-spacing: 1px;\r\n        text-align: center;\r\n        margin: 10px;\r\n    }\r\n\r\n    /* close btn for edit */\r\n    .close-btn{\r\n        color: black;\r\n        position: absolute;\r\n        right: 15px;\r\n        top: 15px;\r\n        cursor: pointer;\r\n        font-size: 1.8rem;\r\n        padding: 10px;\r\n        \r\n        :hover{\r\n            color: red;\r\n        }\r\n    }\r\n\r\n    /* board name */\r\n    .board-name{\r\n        margin: 10px 0;\r\n\r\n        p{\r\n            font-size: 14px;\r\n            margin: 7px 0;\r\n        }\r\n\r\n        input{\r\n            width: 100%;\r\n            border-radius: 10px;\r\n            outline: none;\r\n            border: 3px #ddd solid;\r\n            padding: 10px;\r\n        }\r\n\r\n        input:hover{\r\n            border: 3px #cecece solid;\r\n        }\r\n    }\r\n\r\n    /* private or public board */\r\n    form{\r\n        margin: 50px 0;\r\n        cursor: pointer;\r\n        display: flex;\r\n        gap: 10px;\r\n\r\n        .secret-container{\r\n            position: relative;\r\n        }\r\n\r\n        input[type=checkbox]{\r\n            transform: scale(2);\r\n            margin-left: 5px;\r\n            outline: none;\r\n            border: 1px #ddd solid;\r\n            border-radius: 5px;\r\n            align-self: flex-start;\r\n            cursor: pointer;\r\n\r\n        }\r\n\r\n        label{\r\n            cursor: pointer;\r\n            margin-left: 5px;\r\n            \r\n            h3{\r\n                font-size: 1.1rem;\r\n            }\r\n\r\n            p{\r\n                color: #767676;\r\n                font-size: 1.1rem;\r\n                a{\r\n                    color: #767676;\r\n                    font-weight: 700;\r\n                    text-decoration: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /* create btn */\r\n    .btn-container{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        margin: 10px 0;\r\n    }\r\n\r\n    button{\r\n        font-size: 1.1rem;\r\n        font-weight: 600;\r\n        padding: 17px 15px;\r\n        border-radius: 50px;\r\n        cursor: context-menu;\r\n    }\r\n`\r\n\r\n//delete board\r\nexport const StyledDeleteWrapper = styled.div`\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n        color: red;\r\n    }\r\n\r\n    h1{\r\n        margin: 10px 0;\r\n        text-align: left;\r\n        letter-spacing: 0;\r\n    }\r\n\r\n    p{\r\n        color: #767676;\r\n    }\r\n`","import React, { useState, useContext } from 'react';\r\nimport { CreateBoardModalWrapper, CreateBoardOverlay, CreateBoardModal, StyledDeleteWrapper } from './CreateBoard.style';\r\nimport { BoardsInfoContext } from './contexts/BoardsInfoContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction CreateBoard({ closeModal, modalClose, shouldEdit, closeEditModal, editId, editName, editIsPrivate }) {\r\n    const [ boardName, setBoardName ] = useState(\"\");\r\n    const [ privateBoard, setPrivateBoard ] = useState(false);\r\n    const [ boardsInfo, setBoardsInfo ] = useContext(BoardsInfoContext);\r\n    // for edit\r\n    const [ nameEdit, setNameEdit ] = useState(editName);\r\n    const [ editPrivate, setEditPrivate ] = useState(editIsPrivate);\r\n\r\n    function handleInput(event){\r\n        if(shouldEdit){\r\n            setNameEdit(event.target.value);\r\n        }\r\n        else{\r\n            setBoardName(event.target.value);\r\n        }\r\n    }\r\n\r\n    let createBtnStyles= {\r\n        color: `${boardName ? \"white\" : \"#767676\"}`,\r\n        backgroundColor: `${boardName && \"#e60023\"}`,\r\n        cursor: `${boardName && \"pointer\"}`\r\n    }\r\n\r\n    let editBtnStyles= {\r\n        color: `${nameEdit ? \"white\" : \"#767676\"}`,\r\n        backgroundColor: `${nameEdit && \"#e60023\"}`,\r\n        cursor: `${nameEdit && \"pointer\"}`\r\n    }\r\n\r\n    function makePrivate(event){\r\n        if(shouldEdit){\r\n            event.target.checked ? setEditPrivate(true) : setEditPrivate(false);\r\n        }\r\n        else{\r\n            if(event.target.checked){\r\n                setPrivateBoard(true);\r\n            }\r\n            else{\r\n                setPrivateBoard(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    function deleteBoard(){\r\n        setBoardsInfo(boardsInfo.filter(board => board.boardId !== editId));\r\n    }\r\n\r\n    function addBoard(){\r\n        if(shouldEdit){\r\n            // edit existing board\r\n            if(nameEdit){\r\n                // avoid duplicate board name\r\n                if((boardsInfo.filter(board => board.boardId !== editId)).every(board => board.boardName !== nameEdit)){\r\n                    setBoardsInfo(\r\n                        boardsInfo.map(board =>{\r\n                            if(board.boardId === editId){\r\n                                return({\r\n                                    ...board,\r\n                                    boardName: nameEdit,\r\n                                    isPrivate: editPrivate,\r\n                                    createdDate: new Date().getTime()\r\n                                })\r\n                            }\r\n                            else{\r\n                                return board\r\n                            }\r\n                        })\r\n                    )\r\n                    closeEditModal();\r\n                }\r\n            }\r\n            \r\n        }\r\n        else{\r\n            if(boardName){\r\n                // avoid duplicate board name\r\n                if(boardsInfo.every(board => board.boardName !== boardName)){\r\n                    // add info to board component\r\n                    setBoardsInfo([\r\n                        ...boardsInfo,\r\n                        {\r\n                            boardId: uuidv4(),\r\n                            boardName,\r\n                            boardImgs: [],\r\n                            isPrivate: privateBoard,\r\n                            createdDate: new Date().getTime()\r\n                        }\r\n                    ]);\r\n                    setBoardName(\"\");\r\n                    closeModal();\r\n                    setPrivateBoard(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CreateBoardModalWrapper style={{display: modalClose ? \"none\" : \"block\"}}>\r\n            {\r\n                shouldEdit ? <CreateBoardOverlay onClick={closeEditModal} /> : <CreateBoardOverlay onClick={closeModal}/>\r\n            }\r\n            <CreateBoardModal>\r\n                {\r\n                    shouldEdit ? <h1>Edit Your Board</h1> : <h1>Create Board</h1>\r\n                }\r\n                {\r\n                    shouldEdit && <div onClick={closeEditModal} className=\"close-btn\">✖</div>\r\n                }\r\n                <div className=\"board-name\">\r\n                    <p>Name</p>\r\n                    <input type=\"text\" placeholder='Like \"Places to Go\" or \"Recipes to Make\"' value={shouldEdit ? nameEdit : boardName} onChange={handleInput} maxLength=\"50\"/>\r\n                    {\r\n                        (shouldEdit ? nameEdit.length >= 50  : boardName.length >= 50) && <p style={{fontSize: \"12px\", color: \"#e60023\"}}>Please enter no more than 50 characters.</p>\r\n                    }\r\n                </div>\r\n                <form>\r\n                    <div className=\"secret-container\">\r\n                        <input type=\"checkbox\" onChange={makePrivate} checked={shouldEdit ? editPrivate : privateBoard}/>\r\n                    </div>\r\n                    <label>\r\n                        <h3>Keep this board secret</h3>\r\n                        <p>So only you and collaborators can see it.<a rel=\"noreferrer\" target=\"_blank\" href=\"https://help.pinterest.com/en/article/secret-boards?source=secret_create\"> Learn more</a></p>\r\n                    </label>\r\n                </form>\r\n                {\r\n                    // delete board option in edit\r\n                    shouldEdit && \r\n                        <StyledDeleteWrapper onDoubleClick={deleteBoard}>\r\n                            <h1>Delete Board (double click)</h1>\r\n                            <p>Delete this board and all it's Pin forever.</p>\r\n                            <p>You can't undo this!</p>\r\n                        </StyledDeleteWrapper>\r\n                }\r\n                {/* if input has nothing, grey and no pointer; if input has something, change to red and pointer */}\r\n                <div className=\"btn-container\">\r\n                    {\r\n                        (boardsInfo.some(board => board.boardName === nameEdit && board.boardId !== editId) || boardsInfo.some(board => board.boardName === boardName)) ? \r\n                        <button style={{color: \"#767676\", cursor: \"default\"}} onClick={addBoard}>{shouldEdit ? \"Done\" : \"Create\"}</button> : \r\n                        <button style={shouldEdit ? editBtnStyles : createBtnStyles} onClick={addBoard}>{shouldEdit ? \"Done\" : \"Create\"}</button>\r\n                    }\r\n                </div>\r\n\r\n                {/* if board name is duplicate, show error */}\r\n                {\r\n                    (boardsInfo.some(board => board.boardName === nameEdit && board.boardId !== editId) || boardsInfo.some(board => board.boardName === boardName)) && <p style={{color: \"#e60023\"}}>Duplicate Name.</p>\r\n                }\r\n            </CreateBoardModal>\r\n        </CreateBoardModalWrapper>\r\n    )\r\n}\r\n\r\nCreateBoard.defaultProps ={\r\n    shouldEdit: false,\r\n}\r\n\r\nexport default CreateBoard\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledBoardsWrapper = styled.div`\r\n    display: grid;\r\n    justify-items: center;\r\n    align-items: center;\r\n    grid: auto / repeat(7, 1fr);\r\n    width: 92%;\r\n    margin: auto;\r\n    gap: 10px;\r\n\r\n    @media only screen and (max-width: 1440px){\r\n        grid: auto / repeat(5, 1fr);\r\n    }\r\n\r\n    @media only screen and (max-width: 1400px){\r\n        grid: auto / repeat(4, 1fr);\r\n    }\r\n\r\n    @media only screen and (max-width: 1100px){\r\n        grid: auto / repeat(3, 1fr);\r\n    }\r\n\r\n    @media only screen and (max-width: 850px){\r\n        grid: auto / repeat(2, 1fr);\r\n    }\r\n\r\n\r\n    @media only screen and (max-width: 550px){\r\n        grid: auto / repeat(1, 1fr);\r\n    }\r\n`\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledBoardLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: black;\r\n`\r\n\r\nexport const StyledBoard = styled.div`\r\n    padding: 5px;\r\n    width: 240px;\r\n    width: fit-content;\r\n    position: relative;\r\n\r\n    .lock-icon{\r\n        display: block;\r\n        position: absolute;\r\n        top: 5%;\r\n        left: 5%;\r\n        background-color: white;\r\n        border-radius: 50px;\r\n        padding: 5px;\r\n        width: 30px;\r\n        height: 30px;\r\n        z-index: 2;\r\n    }\r\n\r\n    &:hover{\r\n        .edit-icon{\r\n            display: block;\r\n        }\r\n    }\r\n\r\n    .pin-info{\r\n        width: 95%;\r\n        font-size: 14px;\r\n        margin-left: 10px;\r\n        margin-top: 10px;\r\n        position: relative;\r\n\r\n        h1{\r\n            font-size: 1.3rem;\r\n        }\r\n\r\n        p, span{\r\n            font-size: 14px;\r\n        }\r\n\r\n        span{\r\n            color: #767676;\r\n        }\r\n    }\r\n`\r\n\r\nexport const CoverImage = styled.div`\r\n    width: fit-content;\r\n    border-radius: 20px;\r\n    width: 236px;\r\n    height: 157px;\r\n    position: relative;\r\n    background-color: #e6e6e6;\r\n\r\n    \r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 20px;\r\n        object-fit: cover;\r\n    }\r\n\r\n    .edit-icon{\r\n        display: none;\r\n        position: absolute;\r\n        bottom: 5%;\r\n        right: 5%;\r\n        border-radius: 50px;\r\n        background-color: white;\r\n        padding: 5px;\r\n        width: 30px;\r\n        height: 30px;\r\n\r\n        &:hover{\r\n            background-color: #ddd;\r\n        }\r\n    }\r\n`\r\n","import React, { useState } from 'react';\r\nimport { StyledBoardLink, StyledBoard,  CoverImage } from './Board.style';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport CreateBoard from './CreateBoard';\r\n\r\n\r\nfunction Board({ boardId, boardName, boardImgs, isPrivate, createdDate }){\r\n\r\n    const [ edit, setEdit ] = useState(false);\r\n\r\n    function displayBoardAge(){\r\n        let milli = new Date().getTime() - createdDate;\r\n        let min = Math.floor(milli / (60*1000));\r\n        let hrs = Math.floor(milli / (60*60*1000));\r\n        let days = Math.floor(milli / (60*60*24*1000));\r\n\r\n        if(min < 5){\r\n            return `Now`;\r\n        }\r\n        else if(min < 60){\r\n            return `${min}m`;\r\n        }\r\n        else if(days === 0){\r\n            return `${hrs}h`;\r\n        }\r\n        else if(days < 7){\r\n            return `${days}d`;\r\n        }\r\n        if(days >= 7){\r\n            return `${Math.floor(days / 7)}w`;\r\n        }\r\n    }\r\n\r\n    function editBoard(e){\r\n        setEdit(true);\r\n    }\r\n\r\n    // close edit modal\r\n    function closeEditModal(){\r\n        setEdit(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledBoardLink id={boardId} to={{\r\n                pathname: `/pinterest-clone/profile/${boardName}`,\r\n                boardId: boardId\r\n            }}>\r\n                <StyledBoard>\r\n                    <LockIcon className=\"lock-icon\" style={{display: isPrivate ? \"block\" : \"none\"}}/>\r\n                    <CoverImage>\r\n                        {\r\n                            boardImgs.length ? \r\n                            <img src={boardImgs[0].urls.regular} alt={ boardImgs[0].urls.regular} /> : \"\"\r\n                        }\r\n                        <StyledBoardLink to=\"/pinterest-clone/profile\"><CreateIcon className=\"edit-icon\" onClick={editBoard}/></StyledBoardLink>\r\n                    </CoverImage>\r\n                    \r\n                    <div className=\"pin-info\">\r\n                        <h1>{boardName.length > 17 ? boardName.substr(0, 16) + \"...\" : boardName}</h1>\r\n                        <p>{boardImgs.length} Pins <span>{displayBoardAge()}</span></p>\r\n                    </div>\r\n                </StyledBoard>\r\n            </StyledBoardLink>\r\n\r\n            {/* if edit button pressed, show CreateBoard.js */}\r\n            {\r\n                edit && \r\n                    <CreateBoard \r\n                        closeEditModal={closeEditModal} \r\n                        shouldEdit={true} \r\n                        editId={boardId}\r\n                        editName={boardName}\r\n                        editIsPrivate={isPrivate}\r\n                        />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React, { useContext, useState } from 'react';\r\nimport { StyledBoardsWrapper } from './SavedBoard.style';\r\nimport Board from './Board';\r\nimport { BoardsInfoContext } from './contexts/BoardsInfoContext';\r\n\r\n\r\nfunction SavedBoards() {\r\n    const [ boardsInfo, setBoardsInfo ] = useContext(BoardsInfoContext);\r\n\r\n    return (\r\n        <div>\r\n            <StyledBoardsWrapper>\r\n                {/* map out all existing boards */}\r\n                {\r\n                    boardsInfo.map(board => <Board key={board.boardId} {...board} />)\r\n                }\r\n                \r\n            </StyledBoardsWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedBoards\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyledProfile, CreateWrapper, CreateDiv, CreateBoardModalWrapper, CreateBoardModal } from './UserProfile.style';\r\nimport IconButton from '@material-ui/core/IconButton'; // gives bubble effect when clicked\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateBoard from './CreateBoard';\r\nimport SavedBoards from './SavedBoards';\r\n\r\nfunction UserProfile() {\r\n    const [ addBtnToggle, setAddBtnToggle ] = useState(false);\r\n\r\n    const [ boardCreate, setBoardCreate ] = useState(false);\r\n    const [ modalClose, setModalClose ] = useState(false);\r\n\r\n    // toggle create board settings\r\n    function toggleAddBtn(){\r\n        setAddBtnToggle(!addBtnToggle);\r\n    }\r\n\r\n    // open up modal\r\n    function createBoard(){\r\n        setBoardCreate(true);\r\n        setModalClose(false);\r\n        setAddBtnToggle(false);\r\n    }\r\n\r\n    // close modal\r\n    function closeModal(){\r\n        setModalClose(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledProfile>\r\n                <div className=\"user-profile\">u</div>\r\n                <h1>user1</h1>\r\n                <p>@user1</p>\r\n                <h3 >0 followers · 0 following</h3>\r\n\r\n                <IconButton style={{cursor: \"not-allowed\"}}>\r\n                    <SettingsIcon style={{fontSize: \"24px\", fill: \"black\"}}/>\r\n                </IconButton>\r\n\r\n                <CreateWrapper>\r\n                    <IconButton onClick={toggleAddBtn}>\r\n                        <AddIcon style={{fontSize: \"30px\", fill: \"black\", fontWeight: \"bold\" }}/>\r\n                    </IconButton>\r\n                    <CreateDiv style={{display: addBtnToggle ? \"block\" : \"none\"}}>\r\n                        <p>Create</p>\r\n                        <h3 className=\"pin\">Pin</h3>\r\n                        <h3 className=\"board\" onClick={createBoard}>Board</h3>\r\n                    </CreateDiv>\r\n                </CreateWrapper>\r\n            </StyledProfile>\r\n\r\n            {/* create board */}\r\n            <SavedBoards />\r\n\r\n            {\r\n                boardCreate && <CreateBoard closeModal={closeModal} modalClose={modalClose} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","import React from 'react';\r\nimport Notifications from './Notifications';\r\n\r\nfunction MobileNotif() {\r\n    return (\r\n        <Notifications notifToggle={true}/>\r\n    )\r\n}\r\n\r\nexport default MobileNotif\r\n","import React from 'react';\r\nimport Inbox from './Inbox'\r\n\r\nfunction MobileInbox() {\r\n    return (\r\n        <Inbox inboxToggle={true}/>\r\n    )\r\n}\r\n\r\nexport default MobileInbox\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledBoardDetailsWrapper = styled.div`\r\n    margin-top: 80px;\r\n`\r\n\r\nexport const StyledBoardHeader = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    h1{\r\n        font-size: 2.4rem;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .board-edit{\r\n        background-color: #efefef;\r\n        border-radius: 50%;\r\n        cursor: pointer;\r\n        font-size: 1.7rem;\r\n        padding: 5px;\r\n\r\n        :hover{\r\n            background-color: #ddd;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledSecret = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #767676;\r\n    letter-spacing: 1px;\r\n    margin-top: 10px;\r\n\r\n    .lock-icon{\r\n        font-size: 20px;\r\n        margin-right: 5px;\r\n    }\r\n\r\n    p{\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nexport const StyledH1 = styled.h1`\r\n    margin: 2rem;\r\n    margin-bottom: -4rem;\r\n    font-size: 1.5rem;\r\n`","import React, { useContext, useState } from 'react';\r\nimport { BoardsInfoContext } from './contexts/BoardsInfoContext';\r\nimport HomeBoard from './HomeBoard';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { StyledBoardDetailsWrapper, StyledBoardHeader, StyledSecret, StyledH1 } from './BoardDetails.style';\r\nimport CreateBoard from './CreateBoard';\r\n\r\nfunction BoardDetails(props) {\r\n    const [boardsInfo, setBoardsInfo] = useContext(BoardsInfoContext);\r\n\r\n    const [ edit, setEdit ] = useState(false);\r\n\r\n    function editBoard(e){\r\n        setEdit(true);\r\n    }\r\n\r\n    // close edit modal\r\n    function closeEditModal(){\r\n        setEdit(false);\r\n    }\r\n\r\n    let filteredBoard\r\n    if(props.location.boardId){\r\n        filteredBoard = boardsInfo.filter(board => board.boardId === props.location.boardId)[0];\r\n    }\r\n    else{\r\n        filteredBoard = boardsInfo.filter(board => board.boardName === props.match.params.name)[0];\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                filteredBoard &&\r\n                <>\r\n                    <StyledBoardDetailsWrapper>\r\n                    <StyledBoardHeader>\r\n                        <h1>{filteredBoard.boardName.length <= 10 ? filteredBoard.boardName : filteredBoard.boardName.substring(0, 10) + \"...\"}</h1>\r\n                        <EditIcon className=\"board-edit\" onClick={editBoard}/>\r\n                    </StyledBoardHeader>\r\n                    {\r\n                        filteredBoard.isPrivate && \r\n                        <StyledSecret>\r\n                            <LockIcon className=\"lock-icon\"/> \r\n                            <p>Secret Board</p>\r\n                        </StyledSecret>\r\n                    }\r\n                    <StyledH1>\r\n                        {filteredBoard.boardImgs.length} {filteredBoard.boardImgs.length < 2 ? \"Pin\" : \"Pins\"}\r\n                    </StyledH1>\r\n                    <HomeBoard forBoard={true} filteredboardImgs={filteredBoard.boardImgs}/>\r\n                </StyledBoardDetailsWrapper>\r\n\r\n                {\r\n                    edit && \r\n                        <CreateBoard \r\n                            closeEditModal={closeEditModal} \r\n                            shouldEdit={true} \r\n                            editId={filteredBoard.boardId}\r\n                            editName={filteredBoard.boardName}\r\n                            editIsPrivate={filteredBoard.isPrivate}\r\n                        />\r\n                }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BoardDetails\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledImgPinDetailsWrapper = styled.div`\r\n    margin-top: 6rem;\r\n`\r\n\r\nexport const StyledImg = styled.div`\r\n    width: 60%;\r\n    margin: auto;\r\n    border-radius: 20px;\r\n    box-shadow: 0px 1px 10px 5px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n\r\n    .img-container{\r\n        width: 60%;\r\n        border-top-left-radius: inherit;\r\n        border-bottom-left-radius: inherit;\r\n        cursor: pointer;\r\n\r\n        img{\r\n            width: 100%;\r\n            height: 100%;\r\n            border-top-left-radius: inherit;\r\n            border-bottom-left-radius: inherit;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n\r\n    .pin-board-list{\r\n        flex: 1;\r\n        border-top-right-radius: inherit;\r\n        border-bottom-right-radius: inherit;\r\n        padding: 20px;\r\n        position: relative;\r\n\r\n        h1{\r\n            font-size: 2rem;\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    .board-list-container{\r\n        position: absolute;\r\n        left: 1.5rem;\r\n        right: 1.5rem;\r\n        top: 4rem;\r\n        bottom: 1rem;\r\n        max-height: 100%;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    @media screen and (max-width: 1100px) {\r\n        .img-container{\r\n            width: 50%;\r\n        }\r\n        \r\n    }\r\n\r\n    @media screen and (max-width: 900px){\r\n        .board-list-container{\r\n            left: 1rem;\r\n            right: 1rem;\r\n            top: 4rem;\r\n            bottom: 0.5rem;\r\n            max-height: 100%;\r\n            overflow-y: auto;\r\n        }\r\n    }\r\n\r\n/* //! */\r\n    @media screen and (max-width: 830px){\r\n        display: block;\r\n\r\n        .img-container{\r\n            width: 100%;\r\n\r\n            img{\r\n                border-radius: 20px 20px 0 0;\r\n            }\r\n        }\r\n\r\n        .pin-board-list{\r\n            border-radius: 0 0 20px 20px;\r\n            padding: 20px;\r\n\r\n            h1{\r\n                font-size: 2rem;\r\n                text-align: center;\r\n            }\r\n        }\r\n\r\n        .board-list-container{\r\n            height: 250px;\r\n            display: block;\r\n            position: static;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 430px){\r\n        .pin-board-list{\r\n            padding: 10px;\r\n\r\n            h1{\r\n                font-size: 1.4rem;\r\n                text-align: center;\r\n            }\r\n        }   \r\n    }\r\n\r\n    @media screen and (max-width: 430px){\r\n        width: 70%;\r\n    }\r\n\r\n    @media screen and (max-width: 430px){\r\n        width: 80%;\r\n\r\n        .pin-board-list{\r\n            padding: 5px;\r\n        }   \r\n    }\r\n`\r\n\r\nexport const StyledOtherImgs = styled.div`\r\n    margin-top: 2rem;\r\n\r\n    .other-imgs-title{\r\n        font-size: 1.4rem;\r\n        margin: 5px 0;\r\n        text-align: center;\r\n        margin-bottom: -4rem;\r\n    }\r\n`","import React, { useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { StyledImgPinDetailsWrapper, StyledImg, StyledOtherImgs } from './ImgPinDetails.style';\r\nimport { CachedImgsContext } from './contexts/CachedImgsContext';\r\nimport { BoardsInfoContext } from './contexts/BoardsInfoContext';\r\nimport ImgPinBoardList from './ImgPinBoardList';\r\nimport HomeBoard from './HomeBoard';\r\n\r\nfunction ImgPinDetails({ match }) {\r\n    const [cachedImages, setCachedImages] = useContext(CachedImgsContext);\r\n    const [boardsInfo, setBoardsInfo] = useContext(BoardsInfoContext);\r\n\r\n    let filteredPin = cachedImages.filter(img => img.id === match.params.id)[0];\r\n\r\n    // make the page scroll to top when another image clicked\r\n    const { pathname } = useLocation();\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                filteredPin &&\r\n                <StyledImgPinDetailsWrapper>\r\n                    <StyledImg>\r\n                        <a className=\"img-container\" href={filteredPin.links.html} target=\"_blank\" rel=\"noreferrer\">\r\n                            <img src={filteredPin.urls.regular} alt={filteredPin.alt_description} />\r\n                        </a>\r\n\r\n                        <div className=\"pin-board-list\">\r\n                            <h1>Add to board</h1>\r\n                            <div className=\"board-list-container\">\r\n                                {\r\n                                    boardsInfo.map(board =>\r\n                                        <ImgPinBoardList boardProps={board} imgInfo={filteredPin} key={board.boardId}/>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </StyledImg>\r\n\r\n                    <StyledOtherImgs>\r\n                        <h3 className=\"other-imgs-title\">Other Images</h3>\r\n                        <HomeBoard randomizeImgs={true}/>\r\n                    </StyledOtherImgs>\r\n                </StyledImgPinDetailsWrapper>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImgPinDetails\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from './components/Nav';\nimport { GlobalStyle } from './App.style';\nimport HomeBoard from \"./components/HomeBoard\";\nimport PageUnavailable from './components/PageUnavailable';\nimport UserProfile from './components/UserProfile';\nimport { SearchInputProvider } from './components/contexts/SearchInputContext';\nimport { ImagePinsProvider } from './components/contexts/ImagePinsContext';\nimport MobileNotif from './components/MobileNotif';\nimport MobileInbox from './components/MobileInbox';\nimport { BoardsInfoProvider } from './components/contexts/BoardsInfoContext';\nimport BoardDetails from './components/BoardDetails';\nimport ImgPinDetails from './components/ImgPinDetails';\nimport { CachedImgsProvider } from './components/contexts/CachedImgsContext';\n\nfunction App() {\n  return (\n    <BoardsInfoProvider>\n      <SearchInputProvider>\n        <ImagePinsProvider>\n          <CachedImgsProvider>\n            <div className=\"App\">\n              <GlobalStyle />\n              <Router>\n                <Nav />\n                <Switch>\n                  <Route exact path= {[\"/\", \"/pinterest-clone/\"]} component={HomeBoard} />\n                  <Route exact path=\"/pinterest-clone/pin/:id\" component={ImgPinDetails} />\n                  <Route exact path=\"/pinterest-clone/profile\" component={UserProfile} />\n                  <Route exact path=\"/pinterest-clone/profile/:name\" component={BoardDetails} />\n                  <Route exact path=\"/pinterest-clone/page-unavailable\" component={PageUnavailable} />\n                  <Route exact path=\"/pinterest-clone/notifications\" component={MobileNotif} />\n                  <Route exact path=\"/pinterest-clone/inbox\" component={MobileInbox} />\n                </Switch>\n              </Router>\n            </div>\n          </CachedImgsProvider>\n        </ImagePinsProvider>\n      </SearchInputProvider>\n    </BoardsInfoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}